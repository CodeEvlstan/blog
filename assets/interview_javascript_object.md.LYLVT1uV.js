import{_ as t,C as r,c as o,o as i,G as n,ae as s,w as l,a as d}from"./chunks/framework.CLNW5JS9.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/javascript/object.md","filePath":"interview/javascript/object.md"}'),c={name:"interview/javascript/object.md"};function h(_,a,u,m,p,b){const e=r("Badge");return i(),o("div",null,[n(e,{type:"warning"},{default:l(()=>a[0]||(a[0]=[d("内容编写中")])),_:1}),a[1]||(a[1]=s('<h2 id="对象的继承方式" tabindex="-1">对象的继承方式 <a class="header-anchor" href="#对象的继承方式" aria-label="Permalink to &quot;对象的继承方式&quot;">​</a></h2><h3 id="原型链方式" tabindex="-1">原型链方式 <a class="header-anchor" href="#原型链方式" aria-label="Permalink to &quot;原型链方式&quot;">​</a></h3><h3 id="构造函数方式" tabindex="-1">构造函数方式 <a class="header-anchor" href="#构造函数方式" aria-label="Permalink to &quot;构造函数方式&quot;">​</a></h3><h3 id="组合继承的方式" tabindex="-1">组合继承的方式 <a class="header-anchor" href="#组合继承的方式" aria-label="Permalink to &quot;组合继承的方式&quot;">​</a></h3><h3 id="原型式继承的方式" tabindex="-1">原型式继承的方式 <a class="header-anchor" href="#原型式继承的方式" aria-label="Permalink to &quot;原型式继承的方式&quot;">​</a></h3><h3 id="寄生式继承的方式" tabindex="-1">寄生式继承的方式 <a class="header-anchor" href="#寄生式继承的方式" aria-label="Permalink to &quot;寄生式继承的方式&quot;">​</a></h3>',6))])}const x=t(c,[["render",h]]);export{q as __pageData,x as default};
