import{_ as t,c as o,o as a,ae as s}from"./chunks/framework.CLNW5JS9.js";const c="/blog/assets/8326cffc1e178a820a9b31e59a731b9da877e855.ODv-FYE8.jpeg",r="/blog/assets/b21c8701a18b87d6c7ccff876b7840281e30fd19.CIluocYX.jpeg",b=JSON.parse('{"title":"cocos","description":"","frontmatter":{},"headers":[],"relativePath":"cocos/introduction/index.md","filePath":"cocos/introduction/index.md"}'),i={name:"cocos/introduction/index.md"};function p(_,e,l,n,d,m){return a(),o("div",null,e[0]||(e[0]=[s('<h1 id="cocos" tabindex="-1">cocos <a class="header-anchor" href="#cocos" aria-label="Permalink to &quot;cocos&quot;">​</a></h1><ol><li>引擎版本3.8.6</li><li>创建空模板 <img src="'+c+'" alt="图1"><img src="'+r+'" alt="图2"></li></ol><p>层级管理器：显示层级对象关系（比如什么叠在什么上面这种） 资源管理器：图片，音频这种素材 场景编辑器：游戏中看到的具体内容 属性选自额：场景内的组件，对象相关的属性</p><p>节点（Node）：节点是 Cocos Creator 中最基本的单位，类似于 HTML DOM 元素。每个节点可以是一个图片、精灵（Sprite）、按钮（Button）或自定义的对象。 组件（Component）：组件是功能的载体。就像前端框架中的组件一样，Cocos Creator 中的每个节点都可以添加不同的组件来赋予功能，比如添加物理属性、动画效果等。 场景（Scene）：场景相当于一个游戏的页面，是节点和组件的容器。可以通过加载不同场景来切换游戏中的关卡或状态。 资源管理：类似于前端中的 src 目录，Cocos Creator 提供了资源管理器用于管理游戏中的所有资源，如图片、音效、脚本等。</p><p>2D游戏：</p><ol><li>精灵</li></ol><p>物理事件</p><p>什么是组件 组件属性又是什么</p><p><a href="https://blog.csdn.net/qq_51326491/article/details/140782003?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=cocos%20creator&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-8-140782003.142%5Ev102%5Epc_search_result_base9&amp;spm=1018.2226.3001.4187" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_51326491/article/details/140782003?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=cocos creator&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-8-140782003.142^v102^pc_search_result_base9&amp;spm=1018.2226.3001.4187</a></p><p>学习 Cocos 社区中优秀的作品远</p>',10)]))}const f=t(i,[["render",p]]);export{b as __pageData,f as default};
