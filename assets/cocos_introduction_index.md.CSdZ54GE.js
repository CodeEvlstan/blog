import{_ as s,c as i,o as e,ae as a}from"./chunks/framework.CLNW5JS9.js";const E=JSON.parse('{"title":"cocos","description":"","frontmatter":{},"headers":[],"relativePath":"cocos/introduction/index.md","filePath":"cocos/introduction/index.md"}'),l={name:"cocos/introduction/index.md"};function n(d,t,r,h,p,o){return e(),i("div",null,t[0]||(t[0]=[a(`<h1 id="cocos" tabindex="-1">cocos <a class="header-anchor" href="#cocos" aria-label="Permalink to &quot;cocos&quot;">​</a></h1><p>COCOS拥有 <strong>高性能、低功耗、流式加载、跨平台</strong> 等诸多优点，您可以用它来创作 <strong>游戏、车机、XR、元宇宙</strong> 等领域的项目。</p><p>初始化项目结构后</p><ul><li><code>assets</code>：资源目录 <code>assets</code> 用来放置游戏中所有的本地资源、脚本和第三方库文件。只有在 <code>assets</code> 目录下的内容才能显示在 资源管理器 中。<code>assets </code>中的每个文件在导入项目后都会生成一个相同名字的 <code>.meta</code>文件，用于存储对应的资源配置和索引信息。<code>.meta</code>文件需要一并提交到版本控制系统，详见 资源管理注意事项 --- <code>meta</code> 文件。 一些第三方工具生成的工程或设计源文件，如 TexturePacker 的 .tps 文件，或 Photoshop 的 .psd 文件，可以选择放在 assets 外面管理。 <ul><li>Scripts/: 存放所有游戏脚本（.ts或.js文件）。</li><li>Textures/: 存放所有图片资源（如PNG、JPG文件）。</li><li>Sounds/: 存放音频资源（如MP3、WAV文件）。</li><li>Scenes/: 存放场景文件（.scene文件）。</li><li>Prefabs/: 存放预制件文件（.prefab文件）。</li><li>Animations/: 存放动画剪辑文件 。</li><li>Materials/: 存放材质文件（在3D游戏中常用）。</li><li>Fonts/: 存放字体文件 。</li><li>Models/: 存放3D模型文件 。</li></ul></li><li><code>build</code>：构建目录（在构建某平台后会生成该目录） 在使用编辑器主菜单中的 项目 -&gt; 构建发布 使用默认发布路径发布项目后，编辑器会在项目路径下创建 <code>build</code> 目录，并存放所有目标平台的构建工程。</li><li><code>library</code>：导入的资源目录 <code>library</code> 是将 <code>assets</code> 中的资源导入后生成的，在这里文件的结构和资源的格式将被处理成最终游戏发布时需要的形式。 当 <code>library</code> 丢失或损坏的时候，只要删除整个 <code>library</code> 文件夹再打开项目，就会重新生成资源库。</li><li><code>local</code>：日志文件目录 <code>local</code> 文件夹中包含该项目的本机上的配置信息，包括编辑器面板布局、窗口大小、位置等信息。开发者不需要关心这里的内容。</li><li><code>profiles</code>：编辑器配置 <code>profiles</code> 文件夹中包含编辑器的配置信息，包括各目标平台的构建配置信息、场景配置信息等。</li><li><code>extensions</code>: 扩展插件文件夹 <code>extensions</code> 文件夹用于放置此项目的自定义扩展插件。如果需要手动安装扩展插件，可以手动创建该文件夹。如需卸载扩展插件，在 <code>extensions</code> 中删除对应的文件夹即可。</li><li><code>settings</code>：项目设置 <code>settings</code> 里保存特定项目相关的设置，如 项目设置 面板中相关的配置信息等。如果需要在不同开发者之间同步项目设置，请将 <code>settings</code> 目录加入到版本控制。</li><li><code>temp</code>：临时文件目录 <code>temp</code> 是临时文件夹，用于缓存一些 Cocos Creator 在本地的临时文件。这个文件夹可以在关闭 Cocos Creator 后手动删除，开发者不需要关心这里面的内容。</li><li><code>package.json</code>：项目配置 <code>package.json</code> 文件和 assets 文件夹一起，作为验证 Cocos Creator 项目合法性的标志，只有包括了这两个内容的文件夹才能作为 Cocos Creator 项目打开。开发者不需要关心里面的内容。</li></ul><p>由于我们目前只进行COCOS-2D游戏的开发，因此在记录和介绍时，都只针对2D开发模式</p><ol><li><strong>场景编辑器</strong></li></ol><ul><li>鼠标中键：平移视图。</li><li>鼠标滚轮：以当前鼠标悬停位置为中心缩放视图。</li><li>鼠标右键：平移视图。</li><li>F 快捷键：摄像机聚焦到当前选中节点。</li><li>其他快捷键<table tabindex="0"><thead><tr><th style="text-align:left;">选项</th><th style="text-align:left;">说明</th><th style="text-align:left;">默认快捷键</th></tr></thead><tbody><tr><td style="text-align:left;">撤销</td><td style="text-align:left;">撤销上一次对场景的修改</td><td style="text-align:left;">Ctrl/Cmd + Z</td></tr><tr><td style="text-align:left;">重做</td><td style="text-align:left;">恢复上一步骤的撤销动作</td><td style="text-align:left;">Ctrl/Cmd + Shift + Z</td></tr><tr><td style="text-align:left;">剪切</td><td style="text-align:left;">剪切当前选中的节点或字符到剪贴板</td><td style="text-align:left;">Ctrl/Cmd + X</td></tr><tr><td style="text-align:left;">复制</td><td style="text-align:left;">复制当前选中的节点或字符到剪贴板</td><td style="text-align:left;">Ctrl/Cmd + C</td></tr><tr><td style="text-align:left;">粘贴</td><td style="text-align:left;">将剪贴板中的内容粘贴到相应的位置</td><td style="text-align:left;">Ctrl/Cmd + V</td></tr><tr><td style="text-align:left;">全选</td><td style="text-align:left;">焦点在层级管理器内为选中同一层级中的所有节点，焦点在资源管理器则选中同一层级中的所有资源</td><td style="text-align:left;">Ctrl/Cmd + A</td></tr></tbody></table></li></ul><ol start="2"><li><strong>资源管理器</strong><strong>资源管理器</strong> 面板主要可以分为 <strong>工具栏</strong> 和 <strong>资源列表</strong> 两部分内容：</li></ol><p>工具栏 中的功能包括 新建资源、排序方式、搜索过滤、搜索框、全部折叠/展开 和 刷新列表。详情可参考下文介绍。</p><p>资源列表 将项目资源文件夹中的内容以树状结构展示出来，默认包括 assets 和 internal 两个基本资源库（简称 DB）：</p><ul><li>assets 类似操作系统中的文件管理器，只有放在项目文件夹的 assets 目录下的资源才会显示在这里。关于项目文件夹结构说明请参考 项目结构。</li><li>internal 中的是默认的内置资源（只读），内置资源可以复制，但不能进行增删改操作。可以作为资源模板拖拽到 assets 中，即新建了一个项目资源。</li></ul><ol start="3"><li><p><strong>术语</strong></p></li><li><p><strong>如何制作预制体</strong></p></li><li><p><strong>输入事件系统</strong></p><table tabindex="0"><thead><tr><th style="text-align:left;">事件类型</th><th style="text-align:left;">type</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>鼠标事件</strong></td><td style="text-align:left;">Input.EventType.MOUSE_DOWN</td><td style="text-align:left;">当鼠标按键被按下时触发</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Input.EventType.MOUSE_MOVE</td><td style="text-align:left;">当鼠标指针移动时触发</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Input.EventType.MOUSE_UP</td><td style="text-align:left;">当鼠标按键被释放时触发</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Input.EventType.MOUSE_WHEEL</td><td style="text-align:left;">当鼠标滚轮滚动时触发</td></tr><tr><td style="text-align:left;"><strong>触摸事件</strong></td><td style="text-align:left;">Input.EventType.TOUCH_START</td><td style="text-align:left;">当手指开始触摸屏幕时触发</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Input.EventType.TOUCH_MOVE</td><td style="text-align:left;">当手指在屏幕上移动时触发</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Input.EventType.TOUCH_END</td><td style="text-align:left;">当手指离开屏幕时触发（正常结束）</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Input.EventType.TOUCH_CANCEL</td><td style="text-align:left;">当触摸被系统事件中断时触发（如来电）</td></tr><tr><td style="text-align:left;"><strong>键盘事件</strong></td><td style="text-align:left;">Input.EventType.KEY_DOWN</td><td style="text-align:left;">当键盘按键被按下时触发</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Input.Type.KEY_PRESSING</td><td style="text-align:left;">当键盘按键持续按住时触发</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">Input.Type.KEY_UP</td><td style="text-align:left;">当键盘按键被释放时触发</td></tr><tr><td style="text-align:left;"><strong>设备重力传感事件</strong></td><td style="text-align:left;">Input.EventType.DEVICEMOTION</td><td style="text-align:left;">当设备检测到运动时触发（重力感应、加速度计等）</td></tr></tbody></table></li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注册鼠标按下事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Input.EventType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MOUSE_DOWN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;鼠标按下位置:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, event.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注册触摸开始事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Input.EventType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TOUCH_START</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;触摸开始:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, event.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTouches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注册键盘按下事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Input.EventType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">KEY_DOWN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;按键按下:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, event.keyCode);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注册设备运动事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Input.EventType.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DEVICEMOTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;设备加速度:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, event.acceleration);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="核心术语" tabindex="-1">核心术语 <a class="header-anchor" href="#核心术语" aria-label="Permalink to &quot;核心术语&quot;">​</a></h2><ol><li><strong>节点（Node）</strong>：节点是 Cocos Creator 中最基本的单位，类似于 HTML DOM 元素。每个节点可以是一个图片、精灵（Sprite）、按钮（Button）或自定义的对象。<strong>Node</strong> 节点是一个组件必须存在的，它由一个一个组件组成。</li><li><strong>组件（Component）</strong>：组件是功能的载体。就像前端框架中的组件一样，Cocos Creator 中的每个节点都可以添加不同的组件来赋予功能，比如添加物理属性、动画效果等。</li></ol><ul><li>Node</li><li>UITransform 1， Anchor Point：锚点位置， 根据ContentSize进行确认, 如何调整锚点和中心点</li><li>Sprite 负责渲染2D图像或图集</li></ul><ol start="3"><li><strong>场景（Scene）</strong>：场景相当于一个游戏的页面，是节点和组件的容器。可以通过加载不同场景来切换游戏中的关卡或状态。</li></ol><ul><li>在首选项中设置默认编辑场景</li></ul><ol start="4"><li><strong>资源管理</strong>：类似于前端中的 src 目录，Cocos Creator 提供了资源管理器用于管理游戏中的所有资源，如图片、音效、脚本等。</li></ol><h2 id="核心技术" tabindex="-1">核心技术 <a class="header-anchor" href="#核心技术" aria-label="Permalink to &quot;核心技术&quot;">​</a></h2><ol><li><strong>预制体制作</strong>： 将层级管理器中的节点拖入资源管理器中对应的预制体文件夹集合即可</li></ol><h2 id="核心api" tabindex="-1">核心API <a class="header-anchor" href="#核心api" aria-label="Permalink to &quot;核心API&quot;">​</a></h2><h3 id="场景相关" tabindex="-1">场景相关 <a class="header-anchor" href="#场景相关" aria-label="Permalink to &quot;场景相关&quot;">​</a></h3><h3 id="资源文件相关" tabindex="-1">资源文件相关 <a class="header-anchor" href="#资源文件相关" aria-label="Permalink to &quot;资源文件相关&quot;">​</a></h3><ol><li>资源文件的UUID是唯一的，用于管理游戏资源，如果出现相同的UUID，则会出现资源管理方面的报错 （The id already added）, 通常是操作资源管理器时将meta文件一同复制了。如果时图集的情况下，一个meta文件会生成多个UUID。 2D游戏：</li></ol><h3 id="控制台" tabindex="-1">控制台 <a class="header-anchor" href="#控制台" aria-label="Permalink to &quot;控制台&quot;">​</a></h3><ol><li>会显示开发过程中的警告，错误等</li></ol><h3 id="层级管理器" tabindex="-1">层级管理器 <a class="header-anchor" href="#层级管理器" aria-label="Permalink to &quot;层级管理器&quot;">​</a></h3><ol><li>先渲染父节点canvas，节点树上的顺序会影响渲染顺序，</li><li>在层级管理器中，两个节点重名是没有关系的，但是在代码里通过名字获取，会获取到多个。</li></ol><h3 id="场景切换" tabindex="-1">场景切换 <a class="header-anchor" href="#场景切换" aria-label="Permalink to &quot;场景切换&quot;">​</a></h3><ol><li>小游戏做一个加载场景，和一个主场景，然后做预制体的切换</li></ol><h3 id="左手坐标系" tabindex="-1">左手坐标系 <a class="header-anchor" href="#左手坐标系" aria-label="Permalink to &quot;左手坐标系&quot;">​</a></h3><h3 id="矩形变换工具" tabindex="-1">矩形变换工具 <a class="header-anchor" href="#矩形变换工具" aria-label="Permalink to &quot;矩形变换工具&quot;">​</a></h3><h3 id="增量吸附工具" tabindex="-1">增量吸附工具 <a class="header-anchor" href="#增量吸附工具" aria-label="Permalink to &quot;增量吸附工具&quot;">​</a></h3><h2 id="世界坐标系与本地坐标系" tabindex="-1">世界坐标系与本地坐标系 <a class="header-anchor" href="#世界坐标系与本地坐标系" aria-label="Permalink to &quot;世界坐标系与本地坐标系&quot;">​</a></h2><ol><li>精灵</li></ol><p>物理事件</p><p>什么是组件 组件属性又是什么</p><p><a href="https://blog.csdn.net/qq_51326491/article/details/140782003?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=cocos%20creator&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-8-140782003.142%5Ev102%5Epc_search_result_base9&amp;spm=1018.2226.3001.4187" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_51326491/article/details/140782003?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=cocos creator&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-8-140782003.142^v102^pc_search_result_base9&amp;spm=1018.2226.3001.4187</a></p><p>学习 Cocos 社区中优秀的作品远</p><p>2D游戏：</p><ol><li>精灵</li></ol><p>物理事件</p><p>什么是组件 组件属性又是什么</p><p><a href="https://blog.csdn.net/qq_51326491/article/details/140782003?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=cocos%20creator&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-8-140782003.142%5Ev102%5Epc_search_result_base9&amp;spm=1018.2226.3001.4187" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_51326491/article/details/140782003?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=cocos creator&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-8-140782003.142^v102^pc_search_result_base9&amp;spm=1018.2226.3001.4187</a></p><p>学习 Cocos 社区中优秀的作品远</p>`,46)]))}const c=s(l,[["render",n]]);export{E as __pageData,c as default};
